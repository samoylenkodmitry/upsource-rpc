// Generated by the codegen. Please DO NOT EDIT!
// source: message.ftl

package com.ecwid.upsource.rpc.projects

/**
 * @param feedItemId News feed item ID
 * @param projectId Project ID in Upsource
 * @param discussion See DiscussionInFeedDTO parameters
 * @param addedRevisions See RevisionInfoDTO parameters
 * @param removedRevisions See RevisionInfoDTO parameters
 * @param newParticipantInReview See ParticipantInReviewDTO parameters
 * @param removedParticipantFromReview Show removed participants
 * @param participantStateChanged See ParticipantStateChangedDTO parameters
 * @param createdReview See ShortReviewInfoDTO parameters
 * @param modifiedReview See ShortReviewInfoDTO parameters
 * @param removedReview See ReviewIdDTO parameters
 * @param reviewStateChanged See ReviewStateChangedDTO parameters
 * @param branchTrackingStopped The branch name for the "Review stopped branch tracking" feed event
 * @param updatedDeadline 
 * @param pullRequest Whether the feed item relates to the pull request action
 * @param date Unix timestamp
 * @param actorId The ID of the user who performed the feed action
 * @param squashedToRevision Indicates that a review was squashed to a single revision
 * @param removedDiscussionId Indicates that a discussion was removed
 */
@Suppress("unused")
data class FeedItemDTO(
	/**
	 * News feed item ID (required)
	 */
	val feedItemId: String,

	/**
	 * Project ID in Upsource (required)
	 */
	val projectId: String,

	/**
	 * See DiscussionInFeedDTO parameters (optional)
	 * 
	 * @see com.ecwid.upsource.rpc.projects.DiscussionInFeedDTO
	 */
	val discussion: DiscussionInFeedDTO? = null,

	/**
	 * See RevisionInfoDTO parameters (repeated)
	 * 
	 * @see com.ecwid.upsource.rpc.projects.RevisionInfoDTO
	 */
	val addedRevisions: List<RevisionInfoDTO> = emptyList(),

	/**
	 * See RevisionInfoDTO parameters (repeated)
	 * 
	 * @see com.ecwid.upsource.rpc.projects.RevisionInfoDTO
	 */
	val removedRevisions: List<RevisionInfoDTO> = emptyList(),

	/**
	 * See ParticipantInReviewDTO parameters (optional)
	 * 
	 * @see com.ecwid.upsource.rpc.projects.ParticipantInReviewDTO
	 */
	val newParticipantInReview: ParticipantInReviewDTO? = null,

	/**
	 * Show removed participants (optional)
	 */
	val removedParticipantFromReview: String? = null,

	/**
	 * See ParticipantStateChangedDTO parameters (optional)
	 * 
	 * @see com.ecwid.upsource.rpc.projects.ParticipantStateChangedDTO
	 */
	val participantStateChanged: ParticipantStateChangedDTO? = null,

	/**
	 * See ShortReviewInfoDTO parameters (optional)
	 * 
	 * @see com.ecwid.upsource.rpc.projects.ShortReviewInfoDTO
	 */
	val createdReview: ShortReviewInfoDTO? = null,

	/**
	 * See ShortReviewInfoDTO parameters (optional)
	 * 
	 * @see com.ecwid.upsource.rpc.projects.ShortReviewInfoDTO
	 */
	val modifiedReview: ShortReviewInfoDTO? = null,

	/**
	 * See ReviewIdDTO parameters (optional)
	 * 
	 * @see com.ecwid.upsource.rpc.ids.ReviewIdDTO
	 */
	val removedReview: com.ecwid.upsource.rpc.ids.ReviewIdDTO? = null,

	/**
	 * See ReviewStateChangedDTO parameters (optional)
	 * 
	 * @see com.ecwid.upsource.rpc.projects.ReviewStateChangedDTO
	 */
	val reviewStateChanged: ReviewStateChangedDTO? = null,

	/**
	 * The branch name for the "Review stopped branch tracking" feed event (optional)
	 */
	val branchTrackingStopped: String? = null,

	val updatedDeadline: Long? = null,

	/**
	 * Whether the feed item relates to the pull request action (optional)
	 */
	val pullRequest: String? = null,

	/**
	 * Unix timestamp (required)
	 */
	val date: Long,

	/**
	 * The ID of the user who performed the feed action (required)
	 */
	val actorId: String,

	/**
	 * Indicates that a review was squashed to a single revision (optional)
	 */
	val squashedToRevision: RevisionInfoDTO? = null,

	/**
	 * Indicates that a discussion was removed (optional)
	 */
	val removedDiscussionId: String? = null
) {
	@Suppress("unused")
	internal constructor() : this(
		feedItemId = "",
		projectId = "",
		discussion = null,
		addedRevisions = emptyList(),
		removedRevisions = emptyList(),
		newParticipantInReview = null,
		removedParticipantFromReview = null,
		participantStateChanged = null,
		createdReview = null,
		modifiedReview = null,
		removedReview = null,
		reviewStateChanged = null,
		branchTrackingStopped = null,
		updatedDeadline = null,
		pullRequest = null,
		date = 0L,
		actorId = "",
		squashedToRevision = null,
		removedDiscussionId = null
	)
}

