// Generated by the codegen. Please DO NOT EDIT!
// source: message.ftl

package com.ecwid.upsource.rpc.events

/**
 * @param base Base feed event
 * @param notificationReason Notification reason
 * @param discussionId Discussion ID
 * @param commentId Comment ID
 * @param isEdit Whether the event corresponds to comment editing
 * @param resolveAction Indicates a change of the discussion's resolved status: true for resolve, false for un-resolve
 * @param commentText Comment text
 * @param isDeletion Whether the event corresponds to comment deletion
 * @param projectId Anchor data for event
 * @param revisionId Anchor data for event
 * @param fileName Anchor data for event
 */
data class DiscussionFeedEventBean(
	/**
	 * Base feed event (required)
	 */
	val base: FeedEventBean,

	/**
	 * Notification reason (required)
	 */
	val notificationReason: NotificationReason,

	/**
	 * Discussion ID (required)
	 */
	val discussionId: String,

	/**
	 * Comment ID (optional)
	 */
	val commentId: String? = null,

	/**
	 * Whether the event corresponds to comment editing (optional)
	 */
	val isEdit: Boolean? = null,

	/**
	 * Indicates a change of the discussion's resolved status: true for resolve, false for un-resolve (optional)
	 */
	val resolveAction: Boolean? = null,

	/**
	 * Comment text (optional)
	 */
	val commentText: String? = null,

	/**
	 * Whether the event corresponds to comment deletion (optional)
	 */
	val isDeletion: Boolean? = null,

	/**
	 * Anchor data for event (optional)
	 */
	val projectId: String? = null,

	/**
	 * Anchor data for event (optional)
	 */
	val revisionId: String? = null,

	/**
	 * Anchor data for event (optional)
	 */
	val fileName: String? = null
) {
	internal constructor() : this(
		base = FeedEventBean(),
		notificationReason = NotificationReason.UNKNOWN,
		discussionId = "",
		commentId = null,
		isEdit = null,
		resolveAction = null,
		commentText = null,
		isDeletion = null,
		projectId = null,
		revisionId = null,
		fileName = null
	)
}
