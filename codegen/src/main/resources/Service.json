{"services": [{
  "methods": [
    {
      "name": "acceptUserAgreement",
      "argumentType": "messages.VoidMessage",
      "description": "Accepts the end user agreement for a given user",
      "returnType": "messages.VoidMessage"
    },
    {
      "name": "getUserAgreementText",
      "argumentType": "messages.VoidMessage",
      "description": "Returns the text of the end user agreement",
      "returnType": "messages.UserAgreementTextDTO"
    },
    {
      "name": "getAllProjects",
      "argumentType": "messages.ProjectIdListDTO",
      "description": "In the case of an empty request, returns the list of all short project infos. Otherwise returns the list of project infos for a given set of project IDs. In any case only the projects the user has access to are returned.",
      "returnType": "messages.ShortProjectInfoListDTO"
    },
    {
      "name": "findProjects",
      "argumentType": "messages.FindProjectsRequestDTO",
      "description": "Returns the list of projects  matching a given search criteria",
      "returnType": "messages.ShortProjectInfoListDTO"
    },
    {
      "name": "getProjectInfo",
      "argumentType": "messages.ProjectIdDTO",
      "description": "Returns basic information about the project - name, project model, latest revision, etc.",
      "returnType": "messages.ProjectInfoDTO"
    },
    {
      "name": "getProjectVcsLinks",
      "argumentType": "messages.ProjectIdDTO",
      "description": "Returns VCS repository URL(s) for a given project",
      "returnType": "messages.VcsRepoListDTO"
    },
    {
      "name": "getProjectReadme",
      "argumentType": "messages.ProjectIdDTO",
      "description": "Returns README (README.md) contents from the latest revision",
      "returnType": "messages.ProjectReadmeResponseDTO"
    },
    {
      "name": "getCodeReviewPatterns",
      "argumentType": "messages.VoidMessage",
      "description": "Returns all registered code review patterns across all projects",
      "returnType": "messages.CodeReviewPatternsDTO"
    },
    {
      "name": "getHeadRevision",
      "argumentType": "messages.ProjectIdDTO",
      "description": "Returns the revision descriptor for the latest revision - ID, date, commit message, authors, parent revisions, etc.",
      "returnType": "messages.RevisionInfoDTO"
    },
    {
      "name": "getRevisionsList",
      "argumentType": "messages.RevisionsListRequestDTO",
      "description": "Returns the list of revisions in a given project (optionally with revision graph)",
      "returnType": "messages.RevisionDescriptorListDTO"
    },
    {
      "name": "getRevisionsListFiltered",
      "argumentType": "messages.RevisionsListFilteredRequestDTO",
      "description": "Returns the list of revisions that match the given search query",
      "returnType": "messages.RevisionDescriptorListDTO"
    },
    {
      "name": "getUserRevisionsList",
      "argumentType": "messages.UserRevisionsListRequestDTO",
      "description": "Returns the list of revisions across all projects authored by the specified user and (optionally) matching the specified query",
      "returnType": "messages.RevisionDescriptorListDTO"
    },
    {
      "name": "getRevisionsListUpdate",
      "argumentType": "messages.RevisionsListUpdateRequestDTO",
      "description": "Returns the list of revisions since the given revision",
      "returnType": "messages.RevisionsListUpdateResponseDTO"
    },
    {
      "name": "getRevisionInfo",
      "argumentType": "messages.RevisionInProjectDTO",
      "description": "Returns the revision descriptor - ID, date, commit message, authors, parent revisions, etc.",
      "returnType": "messages.RevisionInfoDTO"
    },
    {
      "name": "getRevisionChanges",
      "argumentType": "messages.RevisionChangesRequestDTO",
      "description": "Returns the list of changes (files that were added, removed, or modified) in a revision",
      "returnType": "messages.RevisionsDiffDTO"
    },
    {
      "name": "getRevisionBranches",
      "argumentType": "messages.RevisionInProjectDTO",
      "description": "Returns the list of branches a revision is part of",
      "returnType": "messages.RevisionBranchesResponseDTO"
    },
    {
      "name": "getProjectSubtree",
      "argumentType": "messages.FileInRevisionDTO",
      "description": "Returns the project structure tree starting from the given file",
      "returnType": "messages.ProjectItemsListDTO"
    },
    {
      "name": "getFileMeta",
      "argumentType": "messages.FileInRevisionDTO",
      "description": "Returns meta information about a file (is deleted, is latest revision, etc.)",
      "returnType": "messages.FileMetaResponseDTO"
    },
    {
      "name": "getFileAnnotation",
      "argumentType": "messages.FileInRevisionDTO",
      "description": "Returns the line-by-line file annotation",
      "returnType": "messages.FileAnnotationResponseDTO"
    },
    {
      "name": "getFileContributors",
      "argumentType": "messages.FileInRevisionDTO",
      "description": "Returns the file contributors",
      "returnType": "messages.FileContributorsResponseDTO"
    },
    {
      "name": "getFileFragmentAuthors",
      "argumentType": "messages.FileFragmentAuthorsRequestDTO",
      "description": "Returns the authors of the given file fragment",
      "returnType": "messages.UsersListDTO"
    },
    {
      "name": "getFileHistory",
      "argumentType": "messages.FileHistoryRequestDTO",
      "description": "Returns the history (list of revision IDs and change types) of the file",
      "returnType": "messages.FileHistoryResponseDTO"
    },
    {
      "name": "getFileDiff",
      "argumentType": "messages.FileDiffRequestDTO",
      "description": "Returns the diff (changed lines and ranges) between the given revisions of a file",
      "returnType": "messages.FileDiffResponseDTO"
    },
    {
      "name": "getFileInlineDiff",
      "argumentType": "messages.FileDiffRequestDTO",
      "description": "Returns the inline diff (changed lines and ranges, line numbers mapping) for the given file",
      "returnType": "messages.FileInlineDiffResponseDTO"
    },
    {
      "name": "getFileMergeInlineDiff",
      "argumentType": "messages.FileMergeInlineDiffRequestDTO",
      "description": "Returns the inline diff of a file after the merge with the base branch",
      "returnType": "messages.FileInlineDiffResponseDTO"
    },
    {
      "name": "getFileContent",
      "argumentType": "messages.FileInRevisionDTO",
      "description": "Returns the contents of the given file",
      "returnType": "messages.FileContentResponseDTO"
    },
    {
      "name": "getFilePsi",
      "argumentType": "messages.FilePsiRequestDTO",
      "description": "Returns the semantic markup of the given file",
      "returnType": "messages.FilePsiResponseDTO"
    },
    {
      "name": "getStubNavigationRange",
      "argumentType": "messages.StubIdDTO",
      "description": "Returns the text range of the given PSI element",
      "returnType": "messages.NavigationTargetItemDTO"
    },
    {
      "name": "getElementDescription",
      "argumentType": "messages.PsiElementIdDTO",
      "description": "Returns the text representation of the given PSI element",
      "returnType": "messages.TargetDescriptionDTO"
    },
    {
      "name": "getElementDocumentation",
      "argumentType": "messages.PsiElementIdDTO",
      "description": "Returns the documentation (e.g. Javadoc) for the given PSI element",
      "returnType": "messages.ElementDocumentationDTO"
    },
    {
      "name": "findUsages",
      "argumentType": "messages.PsiElementIdDTO",
      "description": "Returns the list of usages for the given PSI element",
      "returnType": "messages.FindUsagesResponseDTO"
    },
    {
      "name": "getUsagesDiff",
      "argumentType": "messages.UsagesDiffRequestDTO",
      "description": "Returns the usages diff for the given PSI element between two revisions",
      "returnType": "messages.UsagesDiffResponseDTO"
    },
    {
      "name": "findHierarchy",
      "argumentType": "messages.PsiElementIdDTO",
      "description": "Returns the list of inheritors and ancestors for the given PSI element",
      "returnType": "messages.FindHierarchyResultDTO"
    },
    {
      "name": "gotoFileByName",
      "argumentType": "messages.GotoFileRequestDTO",
      "description": "Returns the files matched by the search query in a given revision, review, project-wide, or service-wide",
      "returnType": "messages.GotoFileResponseDTO"
    },
    {
      "name": "textSearch",
      "argumentType": "messages.TextSearchRequestDTO",
      "description": "Performs full-text search across all commits and files (either service-wide or project-wide)",
      "returnType": "messages.TextSearchResponseDTO"
    },
    {
      "name": "findBranches",
      "argumentType": "messages.FindBranchRequestDTO",
      "description": "Performs project-wide search by branch name",
      "returnType": "messages.FindBranchResponseDTO"
    },
    {
      "name": "getBranchDiff",
      "argumentType": "messages.BranchRequestDTO",
      "description": "Returns the list of changes in the given branch",
      "returnType": "messages.RevisionsDiffDTO"
    },
    {
      "name": "getRevisionsDiff",
      "argumentType": "messages.RevisionsDiffRequestDTO",
      "description": "Returns the list of changes between any two revisions",
      "returnType": "messages.RevisionsDiffDTO"
    },
    {
      "name": "getCompareInfo",
      "argumentType": "messages.CompareRequestDTO",
      "description": "Compare page",
      "returnType": "messages.CompareInfoDTO"
    },
    {
      "name": "getCompareGraph",
      "argumentType": "messages.RevisionsDiffRequestDTO",
      "description": "Revision graph for compare page",
      "returnType": "messages.CompareGraphDTO"
    },
    {
      "name": "getBranchInfo",
      "argumentType": "messages.BranchRequestDTO",
      "description": "Branch page",
      "returnType": "messages.BranchInfoDTO"
    },
    {
      "name": "getBranchGraph",
      "argumentType": "messages.BranchRequestDTO",
      "description": "Revision graph for branch page",
      "returnType": "messages.BranchGraphDTO"
    },
    {
      "name": "getBranches",
      "argumentType": "messages.BranchesRequestDTO",
      "description": "Returns the list of branches in a project",
      "returnType": "messages.BranchListDTO"
    },
    {
      "name": "findCommits",
      "argumentType": "messages.FindCommitsRequestDTO",
      "description": "Finds commit(s) with the given commit hash",
      "returnType": "messages.FindCommitsResponseDTO"
    },
    {
      "name": "getProjectDiscussions",
      "argumentType": "messages.DiscussionsInProjectRequestDTO",
      "description": "Returns the discussions in the project, matching given query",
      "returnType": "messages.DiscussionsInProjectDTO"
    },
    {
      "name": "getFileDiscussions",
      "argumentType": "messages.FileInRevisionDTO",
      "description": "Returns the discussions in the given file",
      "returnType": "messages.DiscussionsInFileDTO"
    },
    {
      "name": "getInlineDiscussionsInRevision",
      "argumentType": "messages.RevisionInProjectDTO",
      "description": "Returns the discussions in the given revision",
      "returnType": "messages.DiscussionsInFilesDTO"
    },
    {
      "name": "createDiscussion",
      "argumentType": "messages.CreateDiscussionRequestDTO",
      "description": "Creates a new discussion",
      "returnType": "messages.DiscussionInFileDTO"
    },
    {
      "name": "resolveDiscussion",
      "argumentType": "messages.ResolveDiscussionRequestDTO",
      "description": "Updates a discussion",
      "returnType": "messages.ResolveDiscussionResponseDTO"
    },
    {
      "name": "getCurrentUserCanResolveDiscussion",
      "argumentType": "messages.DiscussionIdDTO",
      "description": "Checks if current user can resolve the given discussion",
      "returnType": "messages.VoidMessage"
    },
    {
      "name": "addDiscussionLabel",
      "argumentType": "messages.UpdateDiscussionLabelRequestDTO",
      "description": "Adds a label to a discussion",
      "returnType": "messages.LabelDTO"
    },
    {
      "name": "addReviewLabel",
      "argumentType": "messages.UpdateReviewLabelRequestDTO",
      "description": "Adds a label to a review",
      "returnType": "messages.UpdateReviewLabelResponseDTO"
    },
    {
      "name": "removeDiscussionLabel",
      "argumentType": "messages.UpdateDiscussionLabelRequestDTO",
      "description": "Removes a label from a discussion",
      "returnType": "messages.VoidMessage"
    },
    {
      "name": "removeReviewLabel",
      "argumentType": "messages.UpdateReviewLabelRequestDTO",
      "description": "Removes a label from a review",
      "returnType": "messages.UpdateReviewLabelResponseDTO"
    },
    {
      "name": "starDiscussion",
      "argumentType": "messages.UpdateDiscussionFlagRequestDTO",
      "description": "Stars a discussion",
      "returnType": "messages.VoidMessage"
    },
    {
      "name": "readDiscussion",
      "argumentType": "messages.UpdateDiscussionFlagRequestDTO",
      "description": "Toggles the read/unread state of a discussion",
      "returnType": "messages.VoidMessage"
    },
    {
      "name": "addComment",
      "argumentType": "messages.AddCommentRequestDTO",
      "description": "Adds a comment to the discussion",
      "returnType": "messages.CommentDTO"
    },
    {
      "name": "updateComment",
      "argumentType": "messages.UpdateCommentRequestDTO",
      "description": "Updates the comment",
      "returnType": "messages.UpdateCommentResponseDTO"
    },
    {
      "name": "removeComment",
      "argumentType": "messages.RemoveCommentRequestDTO",
      "description": "Removes the comment",
      "returnType": "messages.RemoveCommentResponseDTO"
    },
    {
      "name": "updateTaskList",
      "argumentType": "messages.UpdateTaskListRequestDTO",
      "description": "Updates the task list embedded in a comment",
      "returnType": "messages.UpdateCommentResponseDTO"
    },
    {
      "name": "toggleReaction",
      "argumentType": "messages.ToggleReactionRequestDTO",
      "description": "Adds or removes a reaction to a specified target",
      "returnType": "messages.VoidMessage"
    },
    {
      "name": "getFeed",
      "argumentType": "messages.FeedRequestDTO",
      "description": "Returns the news feed",
      "returnType": "messages.FeedDTO"
    },
    {
      "name": "getRevisionDiscussions",
      "argumentType": "messages.RevisionInProjectDTO",
      "description": "Returns the discussions in the given revision",
      "returnType": "messages.DiscussionsInRevisionDTO"
    },
    {
      "name": "getRevisionReviewInfo",
      "argumentType": "messages.RevisionListDTO",
      "description": "Returns short review information for a set of revisions",
      "returnType": "messages.RevisionReviewInfoListDTO"
    },
    {
      "name": "getSuggestedReviewsForRevisions",
      "argumentType": "messages.RevisionListDTO",
      "description": "Returns review suggestions for a set of revisions",
      "returnType": "messages.SuggestedReviewListDTO"
    },
    {
      "name": "getSuggestedReviewForGhosts",
      "argumentType": "messages.UncommittedRevisionDTO",
      "description": "Returns review suggestion for the uncommitted revision",
      "returnType": "messages.ReviewSuggestDTO"
    },
    {
      "name": "getRevisionDiscussionCounters",
      "argumentType": "messages.RevisionDiscussionCountersRequestDTO",
      "description": "Returns discussion counters for a set of revisions",
      "returnType": "messages.RevisionDiscussionCountersListDTO"
    },
    {
      "name": "getRevisionBuildStatus",
      "argumentType": "messages.RevisionListDTO",
      "description": "Returns build status for revisions",
      "returnType": "messages.RevisionBuildStatusListDTO"
    },
    {
      "name": "getRevisionsOwnershipSummary",
      "argumentType": "messages.RevisionListDTO",
      "description": "Returns the code ownership summary for given revisions",
      "returnType": "messages.RevisionsOwnershipSummaryDTO"
    },
    {
      "name": "getRevisionsExternalInspectionsDiff",
      "argumentType": "messages.RevisionListDTO",
      "description": "Returns the diff of external inspections compared to the previous run",
      "returnType": "messages.RevisionsExternalInspectionsDiffResponseDTO"
    },
    {
      "name": "getUsersForMention",
      "argumentType": "messages.UsersForMentionRequestDTO",
      "description": "Returns the suggested users to be mentioned in a comment",
      "returnType": "messages.UsersListDTO"
    },
    {
      "name": "getUsersForReview",
      "argumentType": "messages.UsersForReviewRequestDTO",
      "description": "Returns the suggested reviewers for a given review",
      "returnType": "messages.UsersForReviewDTO"
    },
    {
      "name": "getProjectUserGroups",
      "argumentType": "messages.ProjectUserGroupsRequestDTO",
      "description": "Returns the list of non-empty user groups relevant to a given project",
      "returnType": "messages.UserGroupsListDTO"
    },
    {
      "name": "getUserGroupsByIds",
      "argumentType": "messages.UserGroupsIdsListDTO",
      "description": "Returns the list of user groups by given IDs",
      "returnType": "messages.UserGroupsListDTO"
    },
    {
      "name": "findUsers",
      "argumentType": "messages.FindUsersRequestDTO",
      "description": "Returns the list of users matching a given search criteria",
      "returnType": "messages.UserInfoResponseDTO"
    },
    {
      "name": "getLabels",
      "argumentType": "messages.LabelsRequestDTO",
      "description": "Returns the list of discussion labels",
      "returnType": "messages.LabelsListDTO"
    },
    {
      "name": "getReviewLabels",
      "argumentType": "messages.LabelsRequestDTO",
      "description": "Returns the list of review labels",
      "returnType": "messages.LabelsListDTO"
    },
    {
      "name": "getReviews",
      "argumentType": "messages.ReviewsRequestDTO",
      "description": "Returns the list of reviews",
      "returnType": "messages.ReviewListDTO"
    },
    {
      "name": "createReview",
      "argumentType": "messages.CreateReviewRequestDTO",
      "description": "Creates a review",
      "returnType": "messages.ReviewDescriptorDTO"
    },
    {
      "name": "closeReview",
      "argumentType": "messages.CloseReviewRequestDTO",
      "description": "Closes a review",
      "returnType": "messages.CloseReviewResponseDTO"
    },
    {
      "name": "renameReview",
      "argumentType": "messages.RenameReviewRequestDTO",
      "description": "Renames a review",
      "returnType": "messages.RenameReviewResponseDTO"
    },
    {
      "name": "editReviewDescription",
      "argumentType": "messages.EditReviewDescriptionRequestDTO",
      "description": "Sets review description",
      "returnType": "messages.EditReviewDescriptionResponseDTO"
    },
    {
      "name": "getReviewDetails",
      "argumentType": "messages.ReviewIdDTO",
      "description": "Returns review details",
      "returnType": "messages.ReviewDescriptorDTO"
    },
    {
      "name": "getReviewOwnershipSummary",
      "argumentType": "messages.ReviewIdDTO",
      "description": "Returns the code ownership summary for a given review",
      "returnType": "messages.ReviewOwnershipSummaryDTO"
    },
    {
      "name": "getReviewProgress",
      "argumentType": "messages.ReviewIdDTO",
      "description": "Returns participants' progress in a given review",
      "returnType": "messages.ReviewProgressDTO"
    },
    {
      "name": "getReviewInspectionsDiff",
      "argumentType": "messages.ReviewInspectionsDiffRequestDTO",
      "description": "Returns the diff of inspections between two revisions",
      "returnType": "messages.InspectionsDiffDTO"
    },
    {
      "name": "addRevisionToReview",
      "argumentType": "messages.RevisionsInReviewDTO",
      "description": "Attaches a revision to a review",
      "returnType": "messages.VoidMessage"
    },
    {
      "name": "startBranchTracking",
      "argumentType": "messages.StartBranchTrackingRequestDTO",
      "description": "Initiates branch tracking for a given review",
      "returnType": "messages.VoidMessage"
    },
    {
      "name": "stopBranchTracking",
      "argumentType": "messages.StopBranchTrackingRequestDTO",
      "description": "Stops branch tracking for a given review",
      "returnType": "messages.VoidMessage"
    },
    {
      "name": "squashReviewRevisions",
      "argumentType": "messages.ReviewIdDTO",
      "description": "Rebase the review to a single squashed revision",
      "returnType": "messages.VoidMessage"
    },
    {
      "name": "removeRevisionFromReview",
      "argumentType": "messages.RevisionsInReviewDTO",
      "description": "Removes a revision from a review",
      "returnType": "messages.VoidMessage"
    },
    {
      "name": "getRevisionsInReview",
      "argumentType": "messages.ReviewIdDTO",
      "description": "Returns the list of revisions in a review",
      "returnType": "messages.RevisionsInReviewResponseDTO"
    },
    {
      "name": "getSuggestedRevisionsForReview",
      "argumentType": "messages.ReviewIdDTO",
      "description": "Returns the list of suggested revisions for a particular review",
      "returnType": "messages.SuggestedRevisionListDTO"
    },
    {
      "name": "addParticipantToReview",
      "argumentType": "messages.ParticipantInReviewRequestDTO",
      "description": "Adds a participant (reviewer or watcher) to a review",
      "returnType": "messages.VoidMessage"
    },
    {
      "name": "addGroupToReview",
      "argumentType": "messages.AddGroupToReviewRequestDTO",
      "description": "Adds a group of participants (reviewers or watchers) to a review",
      "returnType": "messages.AddGroupToReviewResponseDTO"
    },
    {
      "name": "updateParticipantInReview",
      "argumentType": "messages.UpdateParticipantInReviewRequestDTO",
      "description": "Updates the participant's state",
      "returnType": "messages.UpdateParticipantInReviewResponseDTO"
    },
    {
      "name": "removeParticipantFromReview",
      "argumentType": "messages.ParticipantInReviewRequestDTO",
      "description": "Removes a participant from a review",
      "returnType": "messages.VoidMessage"
    },
    {
      "name": "toggleReviewMuted",
      "argumentType": "messages.ToggleReviewMutedRequestDTO",
      "description": "Mutes activities taking place in a certain review or cancels muting that was previously set",
      "returnType": "messages.VoidMessage"
    },
    {
      "name": "setReviewDeadline",
      "argumentType": "messages.ReviewDeadlineRequestDTO",
      "description": "Sets/clears review due date",
      "returnType": "messages.VoidMessage"
    },
    {
      "name": "setReviewTargetBranch",
      "argumentType": "messages.ReviewTargetBranchDTO",
      "description": "Merge review: sets target branch",
      "returnType": "messages.SetReviewTargetBranchResponseDTO"
    },
    {
      "name": "getReviewSummaryChanges",
      "argumentType": "messages.ReviewSummaryChangesRequestDTO",
      "description": "Returns the list of changes (sum of all revisions) in a review",
      "returnType": "messages.ReviewSummaryChangesResponseDTO"
    },
    {
      "name": "getFileInReviewSummaryInlineChanges",
      "argumentType": "messages.FileInReviewDiffRequestDTO",
      "description": "Returns the diff (sum of all revisions) of a file in review",
      "returnType": "messages.FileInlineDiffResponseDTO"
    },
    {
      "name": "getFileInReviewSummaryDiff",
      "argumentType": "messages.FileInReviewDiffRequestDTO",
      "description": "Returns the diff (sum of all revisions) of a file in review",
      "returnType": "messages.FileDiffResponseDTO"
    },
    {
      "name": "setFileInReviewReadStatus",
      "argumentType": "messages.FileInReviewReadStatusRequestDTO",
      "description": "Track file read status",
      "returnType": "messages.VoidMessage"
    },
    {
      "name": "getReviewSummaryDiscussions",
      "argumentType": "messages.ReviewSummaryDiscussionsRequestDTO",
      "description": "Returns the review discussions",
      "returnType": "messages.DiscussionsInFilesDTO"
    },
    {
      "name": "removeReview",
      "argumentType": "messages.ReviewIdDTO",
      "description": "Removes the review",
      "returnType": "messages.VoidMessage"
    },
    {
      "name": "getMatchingRevisionsForStacktrace",
      "argumentType": "messages.StacktraceDTO",
      "description": "Returns matching revisions for stacktrace",
      "returnType": "messages.MatchingRevisionsResponseDTO"
    },
    {
      "name": "getStacktraceInContextOfRevision",
      "argumentType": "messages.StacktraceDTO",
      "description": "Returns full paths and vcs commit ids for lines of stacktrace in context of revision",
      "returnType": "messages.StacktracePositionsDTO"
    },
    {
      "name": "getCurrentUser",
      "argumentType": "messages.VoidMessage",
      "description": "Returns the user info for a currently logged-in user",
      "returnType": "messages.CurrentUserResponseDTO"
    },
    {
      "name": "getCurrentUserCanCloseReview",
      "argumentType": "messages.ReviewIdDTO",
      "description": "Checks if current user can close given review",
      "returnType": "messages.VoidMessage"
    },
    {
      "name": "getCurrentUserCanDeleteReview",
      "argumentType": "messages.ReviewIdDTO",
      "description": "Checks if current user can delete given review",
      "returnType": "messages.VoidMessage"
    },
    {
      "name": "getUserInfo",
      "argumentType": "messages.UserInfoRequestDTO",
      "description": "Returns user info for given users",
      "returnType": "messages.UserInfoResponseDTO"
    },
    {
      "name": "getUsersPresenceInfo",
      "argumentType": "messages.UserInfoRequestDTO",
      "description": "Returns presence info for given users",
      "returnType": "messages.UsersPresenceInfoResponseDTO"
    },
    {
      "name": "bindVcsUsername",
      "argumentType": "messages.BindVcsUsernameRequestDTO",
      "description": "Maps a VCS username/email to a Hub account",
      "returnType": "messages.VoidMessage"
    },
    {
      "name": "getUserProjects",
      "argumentType": "messages.UserProjectsRequestDTO",
      "description": "Returns the list of projects the specified user contributed to",
      "returnType": "messages.UserProjectsResponseDTO"
    },
    {
      "name": "setUserAbsence",
      "argumentType": "messages.UserAbsenceRequestDTO",
      "description": "Sets or clears a user absence",
      "returnType": "messages.VoidMessage"
    },
    {
      "name": "getUserSetting",
      "argumentType": "messages.GetSettingRequestDTO",
      "description": "Returns the value of a user setting by name",
      "returnType": "messages.GetSettingResponseDTO"
    },
    {
      "name": "setUserSetting",
      "argumentType": "messages.SetSettingRequestDTO",
      "description": "Updates the value of a user setting by name",
      "returnType": "messages.VoidMessage"
    },
    {
      "name": "getClusterSetting",
      "argumentType": "messages.GetSettingRequestDTO",
      "description": "Returns the value of a cluster-wide setting by name",
      "returnType": "messages.GetSettingResponseDTO"
    },
    {
      "name": "setClusterSetting",
      "argumentType": "messages.SetSettingRequestDTO",
      "description": "Updates the value of a cluster-wide setting by name",
      "returnType": "messages.VoidMessage"
    },
    {
      "name": "setMotto",
      "argumentType": "messages.SetMottoRequestDTO",
      "description": "Sets the server motto",
      "returnType": "messages.VoidMessage"
    },
    {
      "name": "getProjectSetting",
      "argumentType": "messages.GetProjectSettingRequestDTO",
      "description": "Returns the value of a project setting by name",
      "returnType": "messages.GetSettingResponseDTO"
    },
    {
      "name": "setProjectSetting",
      "argumentType": "messages.SetProjectSettingRequestDTO",
      "description": "Updates the value of a project setting by name",
      "returnType": "messages.VoidMessage"
    },
    {
      "name": "setProjectWebhooks",
      "argumentType": "messages.SetProjectWebhooksRequestDTO",
      "description": "Updates the set of webhooks in a project",
      "returnType": "messages.VoidMessage"
    },
    {
      "name": "createProject",
      "argumentType": "messages.CreateProjectRequestDTO",
      "description": "Creates a project",
      "returnType": "messages.VoidMessage"
    },
    {
      "name": "loadProject",
      "argumentType": "messages.ProjectIdDTO",
      "description": "Loads project settings",
      "returnType": "messages.ProjectSettingsDTO"
    },
    {
      "name": "editProject",
      "argumentType": "messages.EditProjectRequestDTO",
      "description": "Updates project settings",
      "returnType": "messages.VoidMessage"
    },
    {
      "name": "deleteProject",
      "argumentType": "messages.ProjectIdDTO",
      "description": "Deletes a project",
      "returnType": "messages.VoidMessage"
    },
    {
      "name": "resetProject",
      "argumentType": "messages.ProjectIdDTO",
      "description": "Completely reset a project",
      "returnType": "messages.VoidMessage"
    },
    {
      "name": "getProjectConfigurationParameters",
      "argumentType": "messages.VoidMessage",
      "description": "Loads project settings",
      "returnType": "messages.ProjectConfigurationResponseDTO"
    },
    {
      "name": "getVcsHostingServices",
      "argumentType": "messages.VcsHostingRequestDTO",
      "description": "Loads VCS Hosting services",
      "returnType": "messages.VcsHostingResponseDTO"
    },
    {
      "name": "createOrEditLabel",
      "argumentType": "messages.EditLabelRequestDTO",
      "description": "Creates/updates a discussion label in a project",
      "returnType": "messages.LabelDTO"
    },
    {
      "name": "createOrEditReviewLabel",
      "argumentType": "messages.EditLabelRequestDTO",
      "description": "Creates/updates a review label in a project",
      "returnType": "messages.LabelDTO"
    },
    {
      "name": "hidePredefinedLabels",
      "argumentType": "messages.HidePredefinedLabelsRequestDTO",
      "description": "Hides predefined discussion labels in a project",
      "returnType": "messages.VoidMessage"
    },
    {
      "name": "hidePredefinedReviewLabels",
      "argumentType": "messages.HidePredefinedLabelsRequestDTO",
      "description": "Hides predefined review labels in a project",
      "returnType": "messages.VoidMessage"
    },
    {
      "name": "deleteLabel",
      "argumentType": "messages.EditLabelRequestDTO",
      "description": "Deletes a discussion label from a project",
      "returnType": "messages.VoidMessage"
    },
    {
      "name": "deleteReviewLabel",
      "argumentType": "messages.EditLabelRequestDTO",
      "description": "Deletes a review label from a project",
      "returnType": "messages.VoidMessage"
    },
    {
      "name": "mergeLabels",
      "argumentType": "messages.EditLabelsRequestDTO",
      "description": "Merges two or more discussion labels into one",
      "returnType": "messages.LabelDTO"
    },
    {
      "name": "testVcsConnection",
      "argumentType": "messages.TestConnectionRequestDTO",
      "description": "Checks connection to a given VCS repository",
      "returnType": "messages.TestConnectionResponseDTO"
    },
    {
      "name": "testPOP3Mailbox",
      "argumentType": "messages.TestPOP3MailboxRequestDTO",
      "description": "Checks availability of a given POP3 mailbox",
      "returnType": "messages.TestPOP3MailboxResponseDTO"
    },
    {
      "name": "getReadOnlyMode",
      "argumentType": "messages.VoidMessage",
      "description": "Checks if server is in read-only mode",
      "returnType": "messages.ReadOnlyModeDTO"
    },
    {
      "name": "setReadOnlyMode",
      "argumentType": "messages.ReadOnlyModeDTO",
      "description": "Enables/disables the read-only mode",
      "returnType": "messages.VoidMessage"
    },
    {
      "name": "getEmailBounces",
      "argumentType": "messages.VoidMessage",
      "returnType": "messages.EmailBouncesResponseDTO"
    },
    {
      "name": "resetEmailBounces",
      "argumentType": "messages.VoidMessage",
      "returnType": "messages.VoidMessage"
    },
    {
      "name": "getAllRoles",
      "argumentType": "messages.VoidMessage",
      "description": "Returns all roles available in Hub",
      "returnType": "messages.AllRolesResponseDTO"
    },
    {
      "name": "getUsersRoles",
      "argumentType": "messages.UsersRolesRequestDTO",
      "description": "Returns users that have any access to the project and role keys associated with each user",
      "returnType": "messages.UsersRolesResponseDTO"
    },
    {
      "name": "addUserRole",
      "argumentType": "messages.AddRoleRequestDTO",
      "description": "Adds a user role",
      "returnType": "messages.VoidMessage"
    },
    {
      "name": "deleteUserRole",
      "argumentType": "messages.DeleteRoleRequestDTO",
      "description": "Deletes a user role (not the role itself, but the association)",
      "returnType": "messages.VoidMessage"
    },
    {
      "name": "inviteUser",
      "argumentType": "messages.InviteUserRequestDTO",
      "description": "Searches for user in Hub by an email, and sends an invitation if not found",
      "returnType": "messages.InviteUserResponseDTO"
    },
    {
      "name": "exportData",
      "argumentType": "messages.VoidMessage",
      "description": "Exports user-generated data - reviews, discussions, settings",
      "returnType": "messages.ExportDataResponseDTO"
    },
    {
      "name": "getProjectActivity",
      "argumentType": "messages.ProjectActivityRequestDTO",
      "description": "Returns project activity distribution over time, i.e. the number of commits per time period",
      "returnType": "messages.ProjectActivityDTO"
    },
    {
      "name": "getContributorsDistribution",
      "argumentType": "messages.ContributorsDistributionRequestDTO",
      "description": "Returns contributors distribution over time, i.e. the number of commits per time period per committer",
      "returnType": "messages.ContributorsDistributionDTO"
    },
    {
      "name": "getResponsibilityDistribution",
      "argumentType": "messages.ResponsibilityDistributionRequestDTO",
      "description": "Returns commits distribution in a given date range over all committers and modules",
      "returnType": "messages.ResponsibilityDistributionDTO"
    },
    {
      "name": "getProjectCommitters",
      "argumentType": "messages.ProjectIdDTO",
      "description": "Returns all committers throughout the project history",
      "returnType": "messages.ProjectCommittersDTO"
    },
    {
      "name": "getUserActivity",
      "argumentType": "messages.UserActivityRequestDTO",
      "description": "Returns project activity distribution over time, i.e. the number of commits per time period for a specified set of committers",
      "returnType": "messages.UserActivityDTO"
    },
    {
      "name": "getModulesDistribution",
      "argumentType": "messages.ModulesDistributionRequestDTO",
      "description": "Returns per-module activity distribution in the project",
      "returnType": "messages.ModulesDistributionDTO"
    },
    {
      "name": "getCommitsSummary",
      "argumentType": "messages.CommitsSummaryRequestDTO",
      "description": "Returns the summary for the specified date range and set of committers: total number of commits, number of commits that aren't part of any module, total number of modules changed",
      "returnType": "messages.CommitsSummaryDTO"
    },
    {
      "name": "getCommitsDetails",
      "argumentType": "messages.CommitsDetailsRequestDTO",
      "description": "Returns the revisions in the specified module, in the specified date range and for the specified committers",
      "returnType": "messages.CommitsDetailsDTO"
    },
    {
      "name": "getFileHistoryChart",
      "argumentType": "messages.FileHistoryChartRequestDTO",
      "description": "Returns the data required to display an animated chart of distribution of individual files in project across \"edits - age\" plane",
      "returnType": "messages.FileHistoryChartDTO"
    },
    {
      "name": "getProjectTreeMap",
      "argumentType": "messages.ProjectTreeMapRequestDTO",
      "description": "Returns the list of files in a project and their content sizes required to build the interactive treemap chart",
      "returnType": "messages.ProjectTreeMapDTO"
    },
    {
      "name": "getProjectPulse",
      "argumentType": "messages.ProjectPulseRequestDTO",
      "description": "Returns the activity pulse for a specified project",
      "returnType": "messages.PulseResponseDTO"
    },
    {
      "name": "getUserPulse",
      "argumentType": "messages.UserPulseRequestDTO",
      "description": "Returns the activity pulse of a given user across all projects (`allValues` time series is always empty)",
      "returnType": "messages.PulseResponseDTO"
    },
    {
      "name": "getReviewStatistics",
      "argumentType": "messages.ReviewStatisticsRequestDTO",
      "description": "Returns the general review statistics in the project",
      "returnType": "messages.ReviewStatisticsDTO"
    },
    {
      "name": "getReviewCoverage",
      "argumentType": "messages.ReviewCoverageRequestDTO",
      "description": "Returns the number of revisions covered by reviews in the project",
      "returnType": "messages.ReviewCoverageDTO"
    },
    {
      "name": "getReviewTimeStatistics",
      "argumentType": "messages.ReviewTimeStatisticsRequestDTO",
      "description": "Returns the time distribution of reviews and review iterations",
      "returnType": "messages.ReviewTimeStatisticsDTO"
    },
    {
      "name": "getReviewersGraph",
      "argumentType": "messages.ReviewersGraphRequestDTO",
      "description": "Returns review activity graph for the project",
      "returnType": "messages.ReviewersGraphDTO"
    },
    {
      "name": "updateUserTimezone",
      "argumentType": "messages.UpdateUserTimezoneDTO",
      "description": "Updates user timezone",
      "returnType": "messages.VoidMessage"
    },
    {
      "name": "updateAchievementsLastSeen",
      "argumentType": "messages.UserActionNotificationDTO",
      "description": "Updates the time when the user last saw the list of his/her achievements",
      "returnType": "messages.VoidMessage"
    },
    {
      "name": "getUnlockedUserAchievements",
      "argumentType": "messages.UserAchievementsRequestDTO",
      "description": "Returns the list of achievements the user has unlocked",
      "returnType": "messages.AchievementsListDTO"
    },
    {
      "name": "getUnreadUnlockedUserAchievementsCount",
      "argumentType": "messages.VoidMessage",
      "description": "Returns a count of unread achievements the user has unlocked",
      "returnType": "messages.UserAchievementsCountDTO"
    },
    {
      "name": "getUserAchievements",
      "argumentType": "messages.UserAchievementsRequestDTO",
      "description": "Returns the list of all achievements with information about whether the achievement was unlocked by the user or not",
      "returnType": "messages.AchievementsListDTO"
    },
    {
      "name": "getAvailableIssueTrackerProviders",
      "argumentType": "messages.VoidMessage",
      "description": "Returns the list of available issue trackers",
      "returnType": "messages.IssueTrackerProvidersListDTO"
    },
    {
      "name": "getIssueInfo",
      "argumentType": "messages.IssueInfoRequestDTO",
      "description": "Returns detailed issue information",
      "returnType": "messages.IssueInfoDTO"
    },
    {
      "name": "createIssueFromDiscussion",
      "argumentType": "messages.CreateIssueFromDiscussionRequestDTO",
      "description": "Creates an issue from the discussion in a given issue tracker",
      "returnType": "messages.IssueIdDTO"
    },
    {
      "name": "createIssueFromReview",
      "argumentType": "messages.CreateIssueFromReviewRequestDTO",
      "description": "Creates an issue from the review in a given issue tracker",
      "returnType": "messages.IssueIdDTO"
    }
  ],
  "name": "UpsourceRPC",
  "description": "Main RPC service"
}]}